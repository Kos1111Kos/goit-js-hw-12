{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\n// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst listEl = document.querySelector('.gallery');\nconst loaderEl = document.querySelector('.loader-wrapper');\nconst formEl = document.querySelector('#search-form');\nformEl.addEventListener('submit', onSubmit);\n\n// loader.style.display = 'none';\nlet currentPage = 1;\nlet savedSearchQuery = '';\n// Функция для выполнения GET-запроса к API Pixabay\nasync function getPhotos(q, page = 1) {\n  axios.defaults.baseURL = 'https://pixabay.com/api/';\n\n  // Задаем параметры для запроса, включая ключ API, поисковый запрос, тип изображения и другие параметры\n  const params = {\n    params: {\n      key: '42088137-23c74c59277fc3ae3a179e24d',\n      q,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 15, // Установить количество изображений на странице\n      page, // Использовать текущую страницу\n    },\n  };\n  // Выполняем запрос с использованием библиотеки Axios и возвращаем результат\n  try {\n    return await axios.get('', params);\n  } catch (error) {\n    console.log(error); // В случае ошибки выводим её в консоль\n  }\n}\n\n// Функция для обработки отправки формы\nasync function onSubmit(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение формы\n  loaderPlay(); // Показываем загрузчик\n  listEl.innerHTML = ''; // Очищаем содержимое элемента с классом .gallery\n  const searchQuery = event.currentTarget.elements.searchQuery.value.trim(); // Получаем поисковой запрос из формы\n  if (!searchQuery) {\n    return alert('Please enter a valid search query');\n  }\n  try {\n    // Получаем изображения с помощью функции getPhotos\n    const {\n      data: { hits, totalHits },\n    } = await getPhotos(searchQuery);\n    // Если изображения не найдены, выводим сообщение об ошибке\n    if (hits.length === 0) {\n      return iziToast.error({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n    }\n    // Создаем HTML-разметку на основе полученных данных и отображаем её\n    listEl.innerHTML = createMarkup(hits);\n\n    lightbox.refresh(); // Обновляем галерею изображений\n\n    document.querySelector('.load-more').classList.remove('is-hidden');\n    if (hits.length < totalHits) {\n      // Показать кнопку \"Загрузить еще\"\n      loadMoreEl.classList.remove('is-hidden');\n    } else {\n      // Скрыть кнопку \"Загрузить еще\"\n      loadMoreEl.classList.add('is-hidden');\n      endOfSearchResults(totalHits);\n    }\n  } catch (error) {\n    console.log(error); // В случае ошибки выводим её в консоль\n  } finally {\n    loaderStop(); // Останавливаем отображение загрузчика\n  }\n}\n// Функция для создания HTML-разметки на основе массива данных\nfunction createMarkup(arr) {\n  if (arr.length === 0) {\n    return 'No images found';\n  }\n  return arr\n    .map(\n      el => `\t\t\t\n   <li class='photo-card'>\t\n    <a href='${el.largeImageURL}'>\t\n      <img src='${el.webformatURL}' alt='${el.tags}' loading='lazy' />\n    </a>\t\t\t\t\n    <div class='info'>\t\t\n      <p class='info-item'>\t\n        <b>Likes ${el.likes}</b>\t\n      </p>\t\t\t\n      <p class='info-item'>\t\n        <b>Views ${el.views}</b>\t\n      </p>\t\t\t\n      <p class='info-item'>\t\n        <b>Comments ${el.comments}</b>\n      </p>\t\t\t\n      <p class='info-item'>\t\n        <b>Downloads ${el.downloads}</b>\n      </p>\n    </div>\n  </li>\n  `\n    )\n    .join('');\n}\n// Функция для отображения загрузчика\nfunction loaderPlay() {\n  loaderEl.classList.remove('is-hidden');\n}\n// Функция для остановки отображения загрузчика\nfunction loaderStop() {\n  loaderEl.classList.add('is-hidden');\n}\n\nconst loadMoreEl = document.createElement('button');\nloadMoreEl.classList.add('load-more');\nloadMoreEl.innerHTML = 'Load more';\nloadMoreEl.addEventListener('click', async () => {\n  currentPage++; // Увеличить текущую страницу\n  loaderPlay();\n  try {\n    const { hits, totalHits } = await getPhotos(savedSearchQuery, currentPage);\n    if (hits.length > 0) {\n      listEl.innerHTML += createMarkup(hits);\n      // Обновляем экземпляр SimpleLightbox после добавления новых элементов\n      simpleLightbox.refresh();\n    }\n    if (hits.length < totalHits) {\n      loaderStop();\n    } else {\n      loaderStop();\n      loadMoreEl.classList.add('is-hidden');\n      endOfSearchResults(totalHits);\n    }\n  } catch (error) {\n    console.log(error);\n    loaderStop();\n  }\n});\ndocument.body.appendChild(loadMoreEl);\n// Викликати цю функцію, коли користувач дійшов до кінця колекції\nfunction endOfSearchResults(totalHits) {\n  if (totalHits === 0) {\n    // Якщо загальна кількість зображень дорівнює 0, вивести повідомлення про порожній результат\n    alert(\"We're sorry, but there are no search results.\");\n  } else {\n    // Інакше вивести повідомлення про кінець результатів пошуку\n    alert(\"We're sorry, but you've reached the end of search results.\");\n    // Приховати кнопку \"Load more\"\n    document.getElementById('loadMoreEl').style.display = 'none';\n  }\n}\n"],"names":["lightbox","SimpleLightbox","listEl","loaderEl","formEl","onSubmit","currentPage","savedSearchQuery","getPhotos","q","page","axios","params","error","event","loaderPlay","searchQuery","hits","totalHits","iziToast","createMarkup","loadMoreEl","endOfSearchResults","loaderStop","arr","el"],"mappings":"owBAUA,MAAMA,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEKC,EAAS,SAAS,cAAc,UAAU,EAC1CC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAS,SAAS,cAAc,cAAc,EACpDA,EAAO,iBAAiB,SAAUC,CAAQ,EAG1C,IAAIC,EAAc,EACdC,EAAmB,GAEvB,eAAeC,EAAUC,EAAGC,EAAO,EAAG,CACpCC,EAAM,SAAS,QAAU,2BAGzB,MAAMC,EAAS,CACb,OAAQ,CACN,IAAK,qCACL,EAAAH,EACA,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,GACV,KAAAC,CACD,CACL,EAEE,GAAI,CACF,OAAO,MAAMC,EAAM,IAAI,GAAIC,CAAM,CAClC,OAAQC,EAAP,CACA,QAAQ,IAAIA,CAAK,CAClB,CACH,CAGA,eAAeR,EAASS,EAAO,CAC7BA,EAAM,eAAc,EACpBC,IACAb,EAAO,UAAY,GACnB,MAAMc,EAAcF,EAAM,cAAc,SAAS,YAAY,MAAM,OACnE,GAAI,CAACE,EACH,OAAO,MAAM,mCAAmC,EAElD,GAAI,CAEF,KAAM,CACJ,KAAM,CAAE,KAAAC,EAAM,UAAAC,CAAW,CAC/B,EAAQ,MAAMV,EAAUQ,CAAW,EAE/B,GAAIC,EAAK,SAAW,EAClB,OAAOE,EAAS,MAAM,CACpB,QACE,0EACV,CAAO,EAGHjB,EAAO,UAAYkB,EAAaH,CAAI,EAEpCjB,EAAS,QAAO,EAEhB,SAAS,cAAc,YAAY,EAAE,UAAU,OAAO,WAAW,EAC7DiB,EAAK,OAASC,EAEhBG,EAAW,UAAU,OAAO,WAAW,GAGvCA,EAAW,UAAU,IAAI,WAAW,EACpCC,EAAmBJ,CAAS,EAE/B,OAAQL,EAAP,CACA,QAAQ,IAAIA,CAAK,CACrB,QAAY,CACRU,GACD,CACH,CAEA,SAASH,EAAaI,EAAK,CACzB,OAAIA,EAAI,SAAW,EACV,kBAEFA,EACJ,IACCC,GAAM;AAAA;AAAA,eAEGA,EAAG;AAAA,kBACAA,EAAG,sBAAsBA,EAAG;AAAA;AAAA;AAAA;AAAA,mBAI3BA,EAAG;AAAA;AAAA;AAAA,mBAGHA,EAAG;AAAA;AAAA;AAAA,sBAGAA,EAAG;AAAA;AAAA;AAAA,uBAGFA,EAAG;AAAA;AAAA;AAAA;AAAA,GAKrB,EACA,KAAK,EAAE,CACZ,CAEA,SAASV,GAAa,CACpBZ,EAAS,UAAU,OAAO,WAAW,CACvC,CAEA,SAASoB,GAAa,CACpBpB,EAAS,UAAU,IAAI,WAAW,CACpC,CAEA,MAAMkB,EAAa,SAAS,cAAc,QAAQ,EAClDA,EAAW,UAAU,IAAI,WAAW,EACpCA,EAAW,UAAY,YACvBA,EAAW,iBAAiB,QAAS,SAAY,CAC/Cf,IACAS,IACA,GAAI,CACF,KAAM,CAAE,KAAAE,EAAM,UAAAC,CAAW,EAAG,MAAMV,EAAUD,EAAkBD,CAAW,EACrEW,EAAK,OAAS,IAChBf,EAAO,WAAakB,EAAaH,CAAI,EAErC,eAAe,QAAO,GAEpBA,EAAK,OAASC,EAChBK,KAEAA,IACAF,EAAW,UAAU,IAAI,WAAW,EACpCC,EAAmBJ,CAAS,EAE/B,OAAQL,EAAP,CACA,QAAQ,IAAIA,CAAK,EACjBU,GACD,CACH,CAAC,EACD,SAAS,KAAK,YAAYF,CAAU,EAEpC,SAASC,EAAmBJ,EAAW,CACjCA,IAAc,EAEhB,MAAM,+CAA+C,GAGrD,MAAM,4DAA4D,EAElE,SAAS,eAAe,YAAY,EAAE,MAAM,QAAU,OAE1D"}